name: Create Release

on:
  workflow_dispatch:
  push: 
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if dry run
        id: check
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "is-dry-run=false" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "is-dry-run=true" >> $GITHUB_OUTPUT
          else
            echo "::error::This workflow can only be executed from develop or main."
            exit 1
          fi
      - uses: cycjimmy/semantic-release-action@v4
        id: release
        with:
            semantic_version: 24
            ci: true
            dry_run: ${{ steps.check.outputs.is-dry-run }}
            extra_plugins: |
              @semantic-release/commit-analyzer
              @semantic-release/release-notes-generator
              conventional-changelog-conventionalcommits
              @semantic-release/changelog
              @semantic-release/github
              @semantic-release/git
              @saithodev/semantic-release-backmerge
        env:
            GITHUB_TOKEN: ${{ github.token }}
            GIT_AUTHOR_NAME: github-actions[bot]
            GIT_AUTHOR_EMAIL: noreply@mercedes-benz.com
            GIT_COMMITTER_NAME: github-actions[bot]
            GIT_COMMITTER_EMAIL: noreply@mercedes-benz.com
      - name: Create release PR
        shell: bash
        if: github.ref == 'refs/heads/develop' && steps.release.outputs.new_release_version != ''
        run: |
          RELEASE_VERSION=${{ steps.release.outputs.new_release_version }}
          RELEASE_BRANCH=release/$RELEASE_VERSION

          if ! git ls-remote --heads origin $RELEASE_BRANCH | grep -q 'refs/heads'; then
            git checkout -b $RELEASE_BRANCH
            git push origin $RELEASE_BRANCH
          fi

          if ! gh pr list --head $RELEASE_BRANCH --label "release" | grep -q $RELEASE_BRANCH; then
            gh pr create -B main -H $RELEASE_BRANCH \
              --title "Release v${RELEASE_VERSION}" \
              --body '${{ steps.release.outputs.new_release_notes }}' \
              --label release
          fi
        env:
          GH_TOKEN: ${{ github.token }}
      # TODO: add summary with link to PR